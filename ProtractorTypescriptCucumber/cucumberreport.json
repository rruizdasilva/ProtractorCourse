[
  {
    "keyword": "Feature",
    "name": "I'm going to validate my Calc app",
    "line": 1,
    "id": "i'm-going-to-validate-my-calc-app",
    "tags": [],
    "uri": "features\\demo.feature",
    "elements": [
      {
        "id": "i'm-going-to-validate-my-calc-app;calculator-add-functionality-testing",
        "keyword": "Scenario",
        "line": 4,
        "name": "Calculator ADD functionality testing",
        "tags": [
          {
            "name": "@CalcGroupOnly",
            "line": 3
          }
        ],
        "type": "scenario",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:4"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "Before",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:8"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "I will navigate to Calc site",
            "match": {
              "location": "stepDefinitions\\steps.ts:10"
            },
            "result": {
              "status": "passed",
              "duration": 1999000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 7,
            "name": "I add two number \"3\" and \"5\"",
            "match": {
              "location": "stepDefinitions\\steps.ts:15"
            },
            "result": {
              "status": "passed",
              "duration": 432000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 8,
            "name": "the output displayed should be \"8\"",
            "match": {
              "location": "stepDefinitions\\steps.ts:25"
            },
            "result": {
              "status": "passed",
              "duration": 1884000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 10,
            "name": "I will navigate to Calc site",
            "match": {
              "location": "stepDefinitions\\steps.ts:10"
            },
            "result": {
              "status": "passed",
              "duration": 365000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 11,
            "name": "I add two number \"2\" and \"7\"",
            "match": {
              "location": "stepDefinitions\\steps.ts:15"
            },
            "result": {
              "status": "passed",
              "duration": 216000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 12,
            "name": "the output displayed should be \"9\"",
            "match": {
              "location": "stepDefinitions\\steps.ts:25"
            },
            "result": {
              "status": "passed",
              "duration": 1890000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:16"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:12"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "node_modules\\protractor-cucumber-framework\\lib\\resultsCapturer.js:27"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ]
      },
      {
        "id": "i'm-going-to-validate-my-calc-app;calculator-add-functionality-testing-through-parameterization",
        "keyword": "Scenario",
        "line": 23,
        "name": "Calculator ADD functionality testing through parameterization",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:4"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 17,
            "name": "I will navigate to Calc site",
            "match": {
              "location": "stepDefinitions\\steps.ts:10"
            },
            "result": {
              "status": "passed",
              "duration": 279000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 18,
            "name": "I add two number \"3\" and \"5\"",
            "match": {
              "location": "stepDefinitions\\steps.ts:15"
            },
            "result": {
              "status": "passed",
              "duration": 221000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 19,
            "name": "the output displayed should be \"7\"",
            "match": {
              "location": "stepDefinitions\\steps.ts:25"
            },
            "result": {
              "status": "failed",
              "duration": 1890000000,
              "error_message": "AssertionError\n    + expected - actual\n\n    -8\n    +7\n\n    at C:\\Users\\14689\\git\\ProtractorCourse\\ProtractorTypescriptCucumber\\stepDefinitions\\steps.ts:28:25\n    at C:\\Users\\14689\\git\\ProtractorCourse\\ProtractorTypescriptCucumber\\node_modules\\protractor\\built\\element.js:804:32\n    at ManagedPromise.invokeCallback_ (C:\\Users\\14689\\git\\ProtractorCourse\\ProtractorTypescriptCucumber\\node_modules\\selenium-webdriver\\lib\\promise.js:1376:14)\n    at TaskQueue.execute_ (C:\\Users\\14689\\git\\ProtractorCourse\\ProtractorTypescriptCucumber\\node_modules\\selenium-webdriver\\lib\\promise.js:3084:14)\n    at TaskQueue.executeNext_ (C:\\Users\\14689\\git\\ProtractorCourse\\ProtractorTypescriptCucumber\\node_modules\\selenium-webdriver\\lib\\promise.js:3067:27)\n    at C:\\Users\\14689\\git\\ProtractorCourse\\ProtractorTypescriptCucumber\\node_modules\\selenium-webdriver\\lib\\promise.js:2927:27\n    at C:\\Users\\14689\\git\\ProtractorCourse\\ProtractorTypescriptCucumber\\node_modules\\selenium-webdriver\\lib\\promise.js:668:7\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)"
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:16"
            },
            "result": {
              "status": "passed",
              "duration": 272000000
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ]
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "node_modules\\protractor-cucumber-framework\\lib\\resultsCapturer.js:27"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          }
        ]
      },
      {
        "id": "i'm-going-to-validate-my-calc-app;calculator-add-functionality-testing-through-parameterization",
        "keyword": "Scenario",
        "line": 24,
        "name": "Calculator ADD functionality testing through parameterization",
        "tags": [],
        "type": "scenario",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:4"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 17,
            "name": "I will navigate to Calc site",
            "match": {
              "location": "stepDefinitions\\steps.ts:10"
            },
            "result": {
              "status": "passed",
              "duration": 280000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 18,
            "name": "I add two number \"2\" and \"7\"",
            "match": {
              "location": "stepDefinitions\\steps.ts:15"
            },
            "result": {
              "status": "passed",
              "duration": 214000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 19,
            "name": "the output displayed should be \"9\"",
            "match": {
              "location": "stepDefinitions\\steps.ts:25"
            },
            "result": {
              "status": "passed",
              "duration": 1907000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stepDefinitions\\hooks.ts:16"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "node_modules\\protractor-cucumber-framework\\lib\\resultsCapturer.js:27"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          }
        ]
      }
    ]
  }
]